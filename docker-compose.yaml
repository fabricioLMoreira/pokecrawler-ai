version: '3.8'

services:
  backend:
    build: ./backend
    image: a2009076370/backend:latest
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      - keycloak
      - db
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}

  crawler:
    build: ./crawler
    image: a2009076370/crawler:latest
    container_name: crawler
    depends_on:
      - db

  frontend:
    build: ./frontend
    image: a2009076370/frontend:latest
    container_name: frontend
    ports:
      - "3000:3000"

  db:
    image: postgres:14
    container_name: db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data

  keycloak:
    image: keycloak/keycloak:26.1.4
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "8180:8080"
    command: start-dev
    volumes:
      - keycloak_data:/opt/keycloak/data

  jenkins:
    image: ricardofilipe/jenkins-pd:lts
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Permite usar Docker no pipeline
    restart: unless-stopped
    user: "${UID}:${GID}"  # Usa mesmo UID/GID do host (definido no .env)

volumes:
  postgres_data:
  keycloak_data:
  jenkins_home:
